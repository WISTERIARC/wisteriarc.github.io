name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

 # デプロイに必要なパーミッション
permissions:
  contents: read
  pages: write
  id-token: write

 # 同時デプロイを防ぐ
concurrency:
  group: "pages"
  cancel-in-progress: true
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # コードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v4

      # Node.jsセットアップ
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # pnpmのセットアップ
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: |
            - recursive: true
              args: [--no-frozen-lockfile]

      # 依存関係とnode_modulesの両方をキャッシュ
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # 依存関係のインストール
      - name: Install dependencies
        run: pnpm install

      # Astroサイトのビルド
      - name: Build site
        run: pnpm run build

      # GitHub Pagesへのデプロイ準備
      # - name: Upload artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: site-build
      #    path: ./dist
  
      # GitHub Pagesへのデプロイ準備
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
          
      - name: Check artifact upload
        run: |
          ls -la dist
          echo "Artifact contents:"
          find dist

      - name: Verify build
        run: |
          if [ ! -d "dist" ]; then
            echo "Build directory does not exist"
            exit 1
          fi
        
#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
  
    steps:
      # アーティファクトのダウンロードとデプロイ前のチェックアウト
      # - name: Checkout
      #  uses: actions/checkout@v4
    
      #- name: Download artifact
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: site-build
      #    path: ./dist
    
      # GitHub Pagesにデプロイ
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3